package mvc;

import generated.parking.BarriereEntree;
import generated.parking.BarriereSortie;
import generated.parking.Parking;
import java.awt.event.ActionListener;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JButton;
import javax.swing.SwingUtilities;

/**
 *
 * @author anatole
 */
public class MainFrame extends javax.swing.JFrame implements Observer{

    /**
     * Creates new form mainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        parkingstate = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        carnumber = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        statedoorentry = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        statedoorexit = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        entervisiteur = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        enteremploye = new javax.swing.JButton();
        getout = new javax.swing.JButton();

        jLabel6.setText("Etat parking:");

        jLabel7.setText("Plein");

        jLabel8.setText("Nombre voitures:");

        jLabel9.setText("100");

        jLabel10.setText("Etat parking:");

        jLabel11.setText("Plein");

        jLabel12.setText("Nombre voitures:");

        jLabel13.setText("100");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel14.setText("Simulation");

        jLabel15.setText("Etat parking:");

        parkingstate.setText("Plein");

        jLabel17.setText("Nombre voiture:");

        carnumber.setText("100");

        jLabel19.setText("Barrière entrée:");

        statedoorentry.setText("Fermer");

        jLabel21.setText("Barrière sortie:");

        statedoorexit.setText("Fermer");

        entervisiteur.setText("Faire entrer visiteur");

        jLabel1.setText("Contrôle");

        enteremploye.setText("Faire entrer employé");

        getout.setText("Faire sortir voiture");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator3)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(parkingstate)
                                .addGap(97, 97, 97)
                                .addComponent(carnumber))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel17)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel19)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel21))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(statedoorentry)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(statedoorexit)
                                .addGap(24, 24, 24)))
                        .addGap(0, 33, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(entervisiteur, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(getout, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(97, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(238, 238, 238))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(jLabel14))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(enteremploye, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel17)
                    .addComponent(jLabel19)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parkingstate)
                    .addComponent(carnumber)
                    .addComponent(statedoorentry)
                    .addComponent(statedoorexit))
                .addGap(28, 28, 28)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entervisiteur, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(getout, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(enteremploye, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    public JButton getEnterEmploye()
    {
        return enteremploye;
    }

    public JButton getEnterVisiteur()
    {
        return entervisiteur;
    }

    public JButton getOut()
    {
        return getout;
    }    
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel carnumber;
    private javax.swing.JButton enteremploye;
    private javax.swing.JButton entervisiteur;
    private javax.swing.JButton getout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel parkingstate;
    private javax.swing.JLabel statedoorentry;
    private javax.swing.JLabel statedoorexit;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object o1) {        
        if(o1 instanceof BarriereEntree)
        {
            BarriereEntree tmp = (BarriereEntree) o1;
            
            if(tmp.getState().equals("close"))
            {
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                       statedoorentry.setText("Fermer");
                    }
                    });              
            }
            else
            {
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                       statedoorentry.setText("Ouverte");
                    }
                });
            }
        }
        else if(o1 instanceof Parking)
        {
            Parking tmp = (Parking) o1;
            
            if(tmp.isPlein())
                parkingstate.setText("Plein");
            else
                parkingstate.setText("Libre");
            
            carnumber.setText(String.valueOf(tmp.getVehiculeNumber()));
        }
        else if(o1 instanceof BarriereSortie)
        {
            BarriereSortie tmp = (BarriereSortie) o1;

            if(tmp.getState().equals("close"))
            {
                SwingUtilities.invokeLater(new Runnable() {
                public void run() {
                  statedoorexit.setText("Fermer");
                }
                });              
            }
            else
            {
                SwingUtilities.invokeLater(new Runnable() {
                public void run() {
                  statedoorexit.setText("Ouverte");
                }
                });
            }   
        }
    }
    
    /**
     * Add controller to all button
     * @param controller 
     */
    public void addController(ActionListener controller)
    {
        enteremploye.addActionListener(controller);
        entervisiteur.addActionListener(controller);
        getout.addActionListener(controller);
    }
}
